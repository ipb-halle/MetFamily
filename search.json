[{"path":"http://ipb-halle.github.io/MetFamily/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"http://ipb-halle.github.io/MetFamily/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"http://ipb-halle.github.io/MetFamily/articles/discoveringregulatedmetabolitefamilies.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Discovering regulated Metabolite Families","text":"text scenario, data MTBLS297. Cool paper [1]. Cool R package: MetFamily","code":""},{"path":"http://ipb-halle.github.io/MetFamily/articles/discoveringregulatedmetabolitefamilies.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the data","title":"Discovering regulated Metabolite Families","text":"First, load data summarise ","code":"# Load separate files filePeakMatrixPath <- system.file(\"extdata/showcase/Metabolite_profile_showcase.txt\", package = \"MetFamily\") fileSpectra <- system.file(\"extdata/showcase/MSMS_library_showcase.msp\", package = \"MetFamily\") fileAnnotation <- system.file(\"extdata/testdata/canopus/canopus1680.txt\", package = \"MetFamily\")  parameterSet <- parameterSetDefault()  dataList <- projectFromFiles(filePeakMatrixPath,                                fileSpectra,                               parameterSet = parameterSet,                               annot_path =fileAnnotation) ## [1] \"Parsing MS/MS file...\" ## [1] \"MS/MS file: Read file\" ## [1] \"MS/MS file: Parse\" ## [1] \"MS/MS file: Assemble spectra\" ## [1] \"MS/MS file: Box\" ## [1] \"MS/MS file postprocessing\" ## [1] \"MS/MS file boxing\" ## [1] \"Parsing MS/MS file ready\" ## [1] \"Parsing MS1 file...\" ## [1] \"Parsing MS1 file content...\" ## [1] \"Precursor deisotoping...\" ## [1] \"Precursor deisotoping 582 / 5823\" ## [1] \"Precursor deisotoping 1164 / 5823\" ## [1] \"Precursor deisotoping 1746 / 5823\" ## [1] \"Precursor deisotoping 2328 / 5823\" ## [1] \"Precursor deisotoping 2910 / 5823\" ## [1] \"Precursor deisotoping 3492 / 5823\" ## [1] \"Precursor deisotoping 4074 / 5823\" ## [1] \"Precursor deisotoping 4656 / 5823\" ## [1] \"Precursor deisotoping 5238 / 5823\" ## [1] \"Precursor deisotoping 5820 / 5823\" ## [1] \"Boxing...\" ## [1] \"Postprocessing matrix...\" ## [1] \"Building fragment mzFragmentGroups...\" ## [1] \"Fragment grouping preprocessing...\" ## [1] \"Fragment grouping preprocessing ready\" ## [1] \"Fragment grouping\" ## [1] \"Fragment grouping 54 / 62300\" ## [1] \"Fragment grouping 30206 / 62300\" ##  ## [1] \"Fragment grouping ready (3.57144689559937s)\" ## [1] \"Fragment group postprocessing\" ## [1] \"Fragment group postprocessing: 1394 / 13943\" ## [1] \"Fragment group postprocessing: 2788 / 13943\" ## [1] \"Fragment group postprocessing: 4182 / 13943\" ## [1] \"Fragment group postprocessing: 5576 / 13943\" ## [1] \"Fragment group postprocessing: 6970 / 13943\" ## [1] \"Fragment group postprocessing: 8364 / 13943\" ## [1] \"Fragment group postprocessing: 9758 / 13943\" ## [1] \"Fragment group postprocessing: 11152 / 13943\" ## [1] \"Fragment group postprocessing: 12546 / 13943\" ## [1] \"Fragment group postprocessing: 13940 / 13943\" ## [1] \"Fragment group postprocessing ready (1.57593655586243s)\" ## [1] \"Boxing to matrix\" ## [1] \"Fragment group deisotoping\" ## [1] \"Fragment group deisotoping 1394 / 13943\" ## [1] \"Fragment group deisotoping 2788 / 13943\" ## [1] \"Fragment group deisotoping 4182 / 13943\" ## [1] \"Fragment group deisotoping 5576 / 13943\" ## [1] \"Fragment group deisotoping 6970 / 13943\" ## [1] \"Fragment group deisotoping 8364 / 13943\" ## [1] \"Fragment group deisotoping 9758 / 13943\" ## [1] \"Fragment group deisotoping 11152 / 13943\" ## [1] \"Fragment group deisotoping 12546 / 13943\" ## [1] \"Fragment group deisotoping 13940 / 13943\" ## [1] \"Fragment group deisotoping ready (8.53042221069336s)\" ## [1] \"Fragment group boxing\" ## [1] \"Building fragment mzFragmentGroups ready\" ## 'as(<dgCMatrix>, \"dgTMatrix\")' is deprecated. ## Use 'as(., \"TsparseMatrix\")' instead. ## See help(\"Deprecated\") and help(\"Matrix-deprecated\"). ## [1] \"Boxing...\" ## [1] \"Ready\" ## [1] \"Preprocessing 955 / 2414\" ## [1] \"Preprocessing 1909 / 2414\" ## [1] \"Features\" ## [1] \"Feature postprocessing\" ## [1] \"Coloring\" ## [1] \"Coloring init\" ## [1] \"Coloring naming functions\" ## [1] \"Coloring gather data\" ## [1] \"Coloring matrix\" ## [1] \"Feature annotations\" ## [1] \"Boxing\" ## [1] \"Ready\" ## [1] \"Merging by: featureId and Alignment ID\""},{"path":"http://ipb-halle.github.io/MetFamily/articles/discoveringregulatedmetabolitefamilies.html","id":"filtering-data","dir":"Articles","previous_headings":"","what":"Filtering data","title":"Discovering regulated Metabolite Families","text":"can filter data remove low quality data points","code":"filterObj <- makeFilterObj(dataList, filter_average = 10000, filter_lfc = 2)  # fileName <- system.file(\"extdata/testdata/canopus/filterPca_canopus.rds\", package = \"MetFamily\") # filterObj_file <- readRDS(fileName) # identical(filterObj_file, filterObj)"},{"path":"http://ipb-halle.github.io/MetFamily/articles/discoveringregulatedmetabolitefamilies.html","id":"pca","dir":"Articles","previous_headings":"","what":"PCA","title":"Discovering regulated Metabolite Families","text":"PCA MS1 Figure @ref(fig:pca). PCA MS1. PCA MS1. PCA MS1. PCA MS1.","code":"## [1] \"######################################################################################\" ## [1] \"PCA (Principal Component Analysis)\" ## [1] \"Analysis: pcaMethods\" ## [1] \"######################################################################################\" ## [1] \"PCA (Principal Component Analysis)\" ## [1] \"Analysis: pcaMethods\""},{"path":"http://ipb-halle.github.io/MetFamily/articles/discoveringregulatedmetabolitefamilies.html","id":"hca","dir":"Articles","previous_headings":"","what":"HCA","title":"Discovering regulated Metabolite Families","text":"HCA MS2 Figure @ref(fig:hca).","code":""},{"path":[]},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/articles/discoveringregulatedmetabolitefamilies.html","id":"session-info","dir":"Articles","previous_headings":"Appendix","what":"Session info","title":"Discovering regulated Metabolite Families","text":"","code":"## R version 4.5.1 (2025-06-13) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] MetFamily_0.99.10 BiocStyle_2.36.0  ##  ## loaded via a namespace (and not attached): ##   [1] DBI_1.2.3                   rlang_1.1.6                 ##   [3] magrittr_2.0.3              clue_0.3-66                 ##   [5] MassSpecWavelet_1.74.0      matrixStats_1.5.0           ##   [7] compiler_4.5.1              systemfonts_1.2.3           ##   [9] vctrs_0.6.5                 reshape2_1.4.4              ##  [11] stringr_1.5.1               ProtGenerics_1.40.0         ##  [13] MetaboCoreUtils_1.16.1      pkgconfig_2.0.3             ##  [15] crayon_1.5.3                fastmap_1.2.0               ##  [17] XVector_0.48.0              promises_1.3.3              ##  [19] rmarkdown_2.29              preprocessCore_1.70.0       ##  [21] UCSC.utils_1.4.0            xcms_4.6.3                  ##  [23] ragg_1.4.0                  purrr_1.1.0                 ##  [25] xfun_0.52                   MultiAssayExperiment_1.34.0 ##  [27] cachem_1.1.0                GenomeInfoDb_1.44.1         ##  [29] jsonlite_2.0.0              progress_1.2.3              ##  [31] later_1.4.2                 DelayedArray_0.34.1         ##  [33] BiocParallel_1.42.1         prettyunits_1.2.0           ##  [35] parallel_4.5.1              cluster_2.1.8.1             ##  [37] R6_2.6.1                    bslib_0.9.0                 ##  [39] stringi_1.8.7               RColorBrewer_1.1-3          ##  [41] limma_3.64.3                GenomicRanges_1.60.0        ##  [43] jquerylib_0.1.4             iterators_1.0.14            ##  [45] Rcpp_1.1.0                  bookdown_0.43               ##  [47] SummarizedExperiment_1.38.1 knitr_1.50                  ##  [49] IRanges_2.42.0              BiocBaseUtils_1.10.0        ##  [51] httpuv_1.6.16               Matrix_1.7-3                ##  [53] igraph_2.1.4                tidyselect_1.2.1            ##  [55] abind_1.4-8                 yaml_2.3.10                 ##  [57] doParallel_1.0.17           affy_1.86.0                 ##  [59] codetools_0.2-20            lattice_0.22-7              ##  [61] tibble_3.3.0                plyr_1.8.9                  ##  [63] Biobase_2.68.0              shiny_1.11.1                ##  [65] evaluate_1.0.4              desc_1.4.3                  ##  [67] Spectra_1.18.2              zip_2.3.3                   ##  [69] affyio_1.78.0               pillar_1.11.0               ##  [71] BiocManager_1.30.26         MatrixGenerics_1.20.0       ##  [73] foreach_1.5.2               stats4_4.5.1                ##  [75] MALDIquant_1.22.3           MSnbase_2.34.1              ##  [77] plotly_4.11.0               ncdf4_1.24                  ##  [79] generics_0.1.4              hms_1.1.3                   ##  [81] S4Vectors_0.46.0            ggplot2_3.5.2               ##  [83] scales_1.4.0                MsExperiment_1.10.1         ##  [85] openxlsx2_1.18              xtable_1.8-4                ##  [87] glue_1.8.0                  MsFeatures_1.16.0           ##  [89] lazyeval_0.2.2              tools_4.5.1                 ##  [91] mzID_1.46.0                 data.table_1.17.8           ##  [93] vsn_3.76.0                  QFeatures_1.18.0            ##  [95] mzR_2.42.0                  XML_3.99-0.18               ##  [97] fs_1.6.6                    grid_4.5.1                  ##  [99] impute_1.82.0               tidyr_1.3.1                 ## [101] shinyBS_0.61.1              MsCoreUtils_1.20.0          ## [103] GenomeInfoDbData_1.2.14     PSMatch_1.12.0              ## [105] cli_3.6.5                   textshaping_1.0.1           ## [107] S4Arrays_1.8.1              viridisLite_0.4.2           ## [109] dplyr_1.1.4                 AnnotationFilter_1.32.0     ## [111] pcaMethods_2.0.0            gtable_0.3.6                ## [113] sass_0.4.10                 digest_0.6.37               ## [115] BiocGenerics_0.54.0         SparseArray_1.8.1           ## [117] htmlwidgets_1.6.4           farver_2.1.2                ## [119] htmltools_0.5.8.1           pkgdown_2.1.3               ## [121] lifecycle_1.0.4             httr_1.4.7                  ## [123] squash_1.0.9                statmod_1.5.0               ## [125] mime_0.13                   MASS_7.3-65"},{"path":"http://ipb-halle.github.io/MetFamily/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steffen Neumann. Maintainer.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c, \"hendrik.treutler@ipb-halle.de\") e=, person, \"khabat.vahabi@ipb-halle.de\") e=, person, \"nstorz@ipb-halle.de\") e=, person, \"gpatoine@ipb-halle.de\") e=, person, ) c=c (2025). MetFamily: MetFamily: Discovering Regulated Metabolite Families Untargeted Metabolomics Studies. R package version 0.99.10, http://ipb-halle.github.io/MetFamily/.","code":"@Manual{,   title = {MetFamily: MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies},   author = {{c} and email = \"hendrik.treutler@ipb-halle.de\") and {person} and email = \"khabat.vahabi@ipb-halle.de\") and {person} and email = \"nstorz@ipb-halle.de\") and {person} and email = \"gpatoine@ipb-halle.de\") and {person} and comment = c) )},   year = {2025},   note = {R package version 0.99.10},   url = {http://ipb-halle.github.io/MetFamily/}, }"},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies","text":"Understanding metabolism fundamental biomedical plant research identification quantification thousands metabolites mass spectrometry modern metabolomics prerequisite elucidating area. However, identification metabolites major bottleneck traditional approaches hampering advances. , present novel approach untargeted discovery metabolite families offering bird’s eye view metabolic regulation comparative metabolomics. implemented presented methodology easy--use web application MetFamily enable analysis comprehensive metabolomics studies researchers worldwide.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/index.html","id":"using-metfamily","dir":"","previous_headings":"","what":"Using MetFamily","title":"MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies","text":"MetFamily web application available https://msbi.ipb-halle.de/MetFamilyDevel/. runs inside Kubernetes cluster Leibniz Institute Plant Biochemistry (IPB). release version described Treutler et al., 2016 hosted https://msbi.ipb-halle.de/MetFamily/.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/index.html","id":"local-installation-of-the-r-package","dir":"","previous_headings":"Using MetFamily","what":"Local installation of the R Package","title":"MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies","text":"MetFamily R package can installed using: installation, can run interactive application locally: use R script process analysis. See vignette Discovering regulated Metabolite Families.","code":"remotes::install_github(\"ipb-halle/MetFamily\") library(MetFamily) runMetFamily()"},{"path":"http://ipb-halle.github.io/MetFamily/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies","text":"MetFamily active development. Let us know run issues. Documentation developers stored dev folder.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/MetFamily-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MetFamily: MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies — MetFamily-package","title":"MetFamily: MetFamily: Discovering Regulated Metabolite Families in Untargeted Metabolomics Studies — MetFamily-package","text":"Untargeted discovery metabolite families offering bird's eye view metabolic regulation comparative metabolomics. implemented presented methodology easy--use web application MetFamily enable analysis comprehensive metabolomics studies researchers worldwide.","code":""},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/reference/addSiriusAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Sirius Annotations — addSiriusAnnotations","title":"Add Sirius Annotations — addSiriusAnnotations","text":"Missing values Sirius file create empty character values \"\" annotation, missing features NA values. transformed \"\" later add_qfeatures.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/addSiriusAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Sirius Annotations — addSiriusAnnotations","text":"","code":"addSiriusAnnotations(   qfeatures,   siriusFile,   rowData_col = \"Alignment ID\",   sirius_col = \"featureId\",   siriusFileColumnName = \"NPC class\" )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/addSiriusAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Sirius Annotations — addSiriusAnnotations","text":"qfeatures dataset siriusFile file path rowData_col character Qfeatures column match sirius_col character Sirius column match siriusFileColumnName One \"NPC class\", \"NPC superclass\", \"NPC pathway\", \"ClassyFire subclass\", \"ClassyFire class\", \"ClassyFire superclass\"","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/addSiriusAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Sirius Annotations — addSiriusAnnotations","text":"qfeatures object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/add_qfeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Add qfeatures to dataList — add_qfeatures","title":"Add qfeatures to dataList — add_qfeatures","text":"Add qfeatures dataList","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/add_qfeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add qfeatures to dataList — add_qfeatures","text":"","code":"add_qfeatures(   dataList,   qfeatures,   fileAnnotation = NULL,   siriusFileColumnName = \"NPC class\" )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/add_qfeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add qfeatures to dataList — add_qfeatures","text":"dataList Output readProjectData. qfeatures qfeature object, can taken resultObj$qfeatures. fileAnnotation character Path sirius annotation file. siriusFileColumnName One \"NPC class\", \"NPC superclass\", \"NPC pathway\", \"ClassyFire subclass\", \"ClassyFire class\", \"ClassyFire superclass\"","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/add_qfeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add qfeatures to dataList — add_qfeatures","text":"dataList object added sirius annotations.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/analyzeTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze tree — analyzeTree","title":"Analyze tree — analyzeTree","text":"Recursive function.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/analyzeTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze tree — analyzeTree","text":"","code":"analyzeTree(dataList, cluster, filter, nodeIdx)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/analyzeTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze tree — analyzeTree","text":"dataList list object cluster cluster object filter filter nodeIdx numeric","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/analyzeTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze tree — analyzeTree","text":"list object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare dendrogram plot — calcPlotDendrogram","title":"Prepare dendrogram plot — calcPlotDendrogram","text":"Prepare dendrogram plot","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare dendrogram plot — calcPlotDendrogram","text":"","code":"calcPlotDendrogram(   dataList,   filter,   clusterDataList,   annoPresentAnnotationsList,   annoPresentColorsList,   distanceMeasure,   selectionFragmentTreeNodeSet = NULL,   selectionAnalysisTreeNodeSet = NULL,   selectionSearchTreeNodeSet = NULL,   showClusterLabels,   hcaPrecursorLabels,   xInterval = NULL )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare dendrogram plot — calcPlotDendrogram","text":"dataList  filter  clusterDataList calculateCluster() annoPresentAnnotationsList  annoPresentColorsList  distanceMeasure  selectionFragmentTreeNodeSet  selectionAnalysisTreeNodeSet  selectionSearchTreeNodeSet  showClusterLabels  hcaPrecursorLabels  xInterval","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare dendrogram plot — calcPlotDendrogram","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Dendrogram for Plotly — calcPlotDendrogram_plotly","title":"Prepare Dendrogram for Plotly — calcPlotDendrogram_plotly","text":"Prepare Dendrogram Plotly","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Dendrogram for Plotly — calcPlotDendrogram_plotly","text":"","code":"calcPlotDendrogram_plotly(   dataList,   filterObj,   clusterDataList,   distanceMeasure,   showClusterLabels,   hcaPrecursorLabels,   selectionFragmentTreeNodeSet = NULL,   selectionAnalysisTreeNodeSet = NULL,   selectionSearchTreeNodeSet = NULL,   selectedSelection,   heatmapContent,   heatmapOrdering,   heatmapProportion )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Dendrogram for Plotly — calcPlotDendrogram_plotly","text":"dataList  filterObj  clusterDataList  distanceMeasure  showClusterLabels  hcaPrecursorLabels  selectionFragmentTreeNodeSet  selectionAnalysisTreeNodeSet  selectionSearchTreeNodeSet  selectedSelection  heatmapContent  heatmapOrdering  heatmapProportion","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotDendrogram_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Dendrogram for Plotly — calcPlotDendrogram_plotly","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap — calcPlotHeatmap","title":"Plot Heatmap — calcPlotHeatmap","text":"Plot Heatmap","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap — calcPlotHeatmap","text":"","code":"calcPlotHeatmap(   dataList,   filterObj,   clusterDataList,   selectedTreeNodeSet,   frameColor,   heatmapContent,   heatmapOrdering,   xInterval = NULL )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap — calcPlotHeatmap","text":"dataList  filterObj  clusterDataList  selectedTreeNodeSet  frameColor  heatmapContent  heatmapOrdering  xInterval","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heatmap — calcPlotHeatmap","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmapLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Heatmap Legend — calcPlotHeatmapLegend","title":"Prep Heatmap Legend — calcPlotHeatmapLegend","text":"Prep Heatmap Legend","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmapLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Heatmap Legend — calcPlotHeatmapLegend","text":"","code":"calcPlotHeatmapLegend(dataList)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmapLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Heatmap Legend — calcPlotHeatmapLegend","text":"dataList","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotHeatmapLegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep Heatmap Legend — calcPlotHeatmapLegend","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2.html","id":null,"dir":"Reference","previous_headings":"","what":"MS2 Plot — calcPlotMS2","title":"MS2 Plot — calcPlotMS2","text":"MS2 Plot","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MS2 Plot — calcPlotMS2","text":"","code":"calcPlotMS2(   dataList,   fragmentsX = NULL,   fragmentsY = NULL,   fragmentsColor = NULL,   fragmentsDiscriminativity = NULL,   fragmentsX_02 = NULL,   fragmentsY_02 = NULL,   fragmentsColor_02 = NULL,   xInterval = NULL,   selectedFragmentIndex = NULL,   dendrogramFragmentStatistics = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MS2 Plot — calcPlotMS2","text":"dataList  fragmentsX  fragmentsY  fragmentsColor  fragmentsDiscriminativity  fragmentsX_02  fragmentsY_02  fragmentsColor_02  xInterval  selectedFragmentIndex  dendrogramFragmentStatistics","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MS2 Plot — calcPlotMS2","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2Legend.html","id":null,"dir":"Reference","previous_headings":"","what":"MS2 plot legend — calcPlotMS2Legend","title":"MS2 plot legend — calcPlotMS2Legend","text":"MS2 plot legend","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2Legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MS2 plot legend — calcPlotMS2Legend","text":"","code":"calcPlotMS2Legend(dataList)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2Legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MS2 plot legend — calcPlotMS2Legend","text":"dataList","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotMS2Legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MS2 plot legend — calcPlotMS2Legend","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAloadings.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plot of loadings — calcPlotPCAloadings","title":"PCA plot of loadings — calcPlotPCAloadings","text":"Show feature loadings PCA plot.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAloadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plot of loadings — calcPlotPCAloadings","text":"","code":"calcPlotPCAloadings(   pcaObj,   dataList,   filterVec = NULL,   pcaDimensionOne = 1,   pcaDimensionTwo = 2,   selectionFragmentPcaLoadingSet = NULL,   selectionAnalysisPcaLoadingSet = NULL,   selectionSearchPcaLoadingSet = NULL,   xInterval = NULL,   yInterval = NULL,   loadingsLabels = \"None\",   showLoadingsAbundance = FALSE,   showLoadingsFeaturesAnnotated = TRUE,   showLoadingsFeaturesUnannotated = TRUE,   showLoadingsFeaturesSelected = TRUE,   showLoadingsFeaturesUnselected = TRUE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAloadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plot of loadings — calcPlotPCAloadings","text":"pcaObj output function calculatePCA dataList dataList object filterVec deprecated, use filterObj element calculatePCA() instead pcaDimensionOne numeric PCA dimension x axis pcaDimensionTwo numeric PCA dimension y axis selectionFragmentPcaLoadingSet numeric vector indices selectionAnalysisPcaLoadingSet numeric vector indices selectionSearchPcaLoadingSet numeric vector indices xInterval numeric Plot parameter yInterval numeric Plot parameter loadingsLabels boolean One \"None\", \"m/z / RT\", \"Metabolite name\", \"Metabolite family\" showLoadingsAbundance logical showLoadingsFeaturesAnnotated logical showLoadingsFeaturesUnannotated logical showLoadingsFeaturesSelected logical showLoadingsFeaturesUnselected logical","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAloadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plot of loadings — calcPlotPCAloadings","text":"resultList object annotation colors","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAscores.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plot of samples — calcPlotPCAscores","title":"PCA plot of samples — calcPlotPCAscores","text":"PCA plot samples","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAscores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plot of samples — calcPlotPCAscores","text":"","code":"calcPlotPCAscores(   pcaObj,   dataList,   filterObj,   pcaDimensionOne = 1,   pcaDimensionTwo = 2,   showScoresLabels,   xInterval = NULL,   yInterval = NULL,   downloadLayout = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAscores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plot of samples — calcPlotPCAscores","text":"pcaObj  dataList  filterObj  pcaDimensionOne first PCA axis pcaDimensionTwo second PCA axis showScoresLabels  xInterval  yInterval  downloadLayout boolean, set TRUE different figure better suited printing","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calcPlotPCAscores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plot of samples — calcPlotPCAscores","text":"makes plot, returns NULL","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cluster object — calculateCluster","title":"Create cluster object — calculateCluster","text":"Create cluster object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cluster object — calculateCluster","text":"","code":"calculateCluster(   dataList,   filterObj,   distanceMatrix,   method,   distanceMeasure,   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cluster object — calculateCluster","text":"dataList  filterObj  distanceMatrix  method  distanceMeasure  progress","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cluster object — calculateCluster","text":"clusterDataList object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateDistanceMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a distance matrix between MS/MS spectra in the MetFamily feature Matrix — calculateDistanceMatrix","title":"Calculate a distance matrix between MS/MS spectra in the MetFamily feature Matrix — calculateDistanceMatrix","text":"Computes distance matrix MS/MS spectra feature matrix representation using various distance similarity measures. function supports multiple distance metrics, following also available MetFamily GUI: \"Jaccard\", \"Jaccard (intensity-weighted)\", \"Jaccard (fragment-count-weighted)\" \"NDP (Normalized dot product)\". following list defines metrics characteristics:","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateDistanceMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a distance matrix between MS/MS spectra in the MetFamily feature Matrix — calculateDistanceMatrix","text":"","code":"calculateDistanceMatrix(   dataList,   filter,   distanceMeasure = \"Jaccard\",   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateDistanceMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a distance matrix between MS/MS spectra in the MetFamily feature Matrix — calculateDistanceMatrix","text":"dataList List object containing precursor, feature MS/MS data. filter Logical integer vector indicating precursors include MS/MS spectra. distanceMeasure Character string specifying distance metric use. Supported values include \"Jaccard\", \"Manhatten\", \"NDP (Normalized dot product)\", others. progress Logical NA. TRUE, progress reported via incProgress().","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateDistanceMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a distance matrix between MS/MS spectra in the MetFamily feature Matrix — calculateDistanceMatrix","text":"list elements: distanceMatrix numeric matrix pairwise distances. filter filter vector used, input parameter. distanceMeasure distance metric used, input parameter.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculateDistanceMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a distance matrix between MS/MS spectra in the MetFamily feature Matrix — calculateDistanceMatrix","text":"\"Jaccard\": Jaccard distance \\(1 - |\\cap B| / |\\cup B|\\): fraction matching fragments among fragments, B MS/MS features two different precursors. \"Jaccard (intensity-weighted)\": Jaccard distance weighted intensity features. First, intensities discretized: [0.01-0.2[ set 0.01, [0.2, 0.4[ 0.2, >= 0.4 increased 1. matching fragments higher intensity used. , Jacard becomes sum matching intensities among sum intensities B. \\(1 - \\sum_{\\matches} max(A_i, B_i) / (sum() + sum(B))\\) \"Jaccard (fragment-count-weighted)\": Jaccard distance weighted relative occurance fragments among precursors filtering counts: \\(1 - \\sum_{\\matches} freq(A_i) / (sum_{\\notin matches} freq() + sum_{\\notin matches}(B))\\) \"NDP (Normalized dot product)\": Normalized dot product similarity: \\(NDP = \\frac{\\left( \\sum_{}^{\\text{S1\\&S2}} W_{\\text{S1},} W_{\\text{S2},} \\right)^2}{\\sum_i W_{\\text{S1},}^2 \\sum_i W_{\\text{S2},}^2}\\) described Gaquerel et al. 2015. (10.1073/pnas.1610218113)https://www.pnas.org/doi/10.1073/pnas.1610218113#sec-4-5","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculatePCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PCA — calculatePCA","title":"Calculate PCA — calculatePCA","text":"Calculate PCA","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculatePCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PCA — calculatePCA","text":"","code":"calculatePCA(dataList, filterObj, ms1AnalysisMethod, scaling, logTransform)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculatePCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PCA — calculatePCA","text":"dataList listObject filterObj filterObject ms1AnalysisMethod  scaling  logTransform","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/calculatePCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PCA — calculatePCA","text":"PCA object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/castListEntries.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast logical's and numeric's in a list or data.frame — castListEntries","title":"Cast logical's and numeric's in a list or data.frame — castListEntries","text":"Tries cast list entry (column data.frame) logical's, create missing values, assumed logical replaced .logical() conversion. Similarly numeric entries (columns). Everything else remains strings","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/castListEntries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast logical's and numeric's in a list or data.frame — castListEntries","text":"","code":"castListEntries(list)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/castListEntries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast logical's and numeric's in a list or data.frame — castListEntries","text":"list","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/castListEntries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast logical's and numeric's in a list or data.frame — castListEntries","text":"list lenght logical's numeric's casted","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/colorPaletteScores.html","id":null,"dir":"Reference","previous_headings":"","what":"Colors — colorPaletteScores","title":"Colors — colorPaletteScores","text":"Colors","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/colorPaletteScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colors — colorPaletteScores","text":"","code":"colorPaletteScores()"},{"path":"http://ipb-halle.github.io/MetFamily/reference/colorPaletteScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colors — colorPaletteScores","text":"string","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/convertToProjectFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Project File — convertToProjectFile","title":"Convert to Project File — convertToProjectFile","text":"Reads creates list separate files.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/convertToProjectFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Project File — convertToProjectFile","text":"","code":"convertToProjectFile(   filePeakMatrixPath,   fileSpectra,   parameterSet,   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/convertToProjectFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Project File — convertToProjectFile","text":"filePeakMatrixPath path fileSpectra path parameterSet list parameters progress logical","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/convertToProjectFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to Project File — convertToProjectFile","text":"resultObj","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/data.numericmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame columns to numeric — data.numericmatrix","title":"Convert data.frame columns to numeric — data.numericmatrix","text":"data.numericmatrix() function works similar base::data.matrix() R-4.0.0 converting character columns numeric without converting factor first, thus returning actual numeric values.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/data.numericmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame columns to numeric — data.numericmatrix","text":"","code":"data.numericmatrix(x)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/data.numericmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame columns to numeric — data.numericmatrix","text":"x data.frame convert","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/data.numericmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.frame columns to numeric — data.numericmatrix","text":"matrix columns converted numeric","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/data.numericmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.frame columns to numeric — data.numericmatrix","text":"","code":"data.numericmatrix(data.frame(a = c(\"1\", \"2\", \"3\"),                                b = c(\"4\", \"5\", \"6\"))) #>      a b #> [1,] 1 4 #> [2,] 2 5 #> [3,] 3 6"},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterData.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a dataList — filterData","title":"Filter a dataList — filterData","text":"Filter dataList","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a dataList — filterData","text":"","code":"filterData(   dataList,   sampleClasses,   sampleSet = NULL,   filterBySamples = FALSE,   filter_average = NULL,   filter_lfc = NULL,   filterList_ms2_masses = NULL,   filter_ms2_ppm = NULL,   filter_ms1_masses = NULL,   filter_ms1_ppm = NULL,   includeIgnoredPrecursors = FALSE,   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a dataList — filterData","text":"dataList List object sampleClasses sample class sampleSet ? filterBySamples boolean filter_average numeric Features mean intensity threshold filtered . filter_lfc numeric Log-fold-change threshold two treatments. implement exactly two groups present. filterList_ms2_masses ? filter_ms2_ppm ? filter_ms1_masses ? filter_ms1_ppm ? includeIgnoredPrecursors boolean progress boolean","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a dataList — filterData","text":"filtered dataList object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterLFC.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter dataset based on LFC of two groups — filterLFC","title":"Filter dataset based on LFC of two groups — filterLFC","text":"Filter dataset based LFC two groups","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterLFC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter dataset based on LFC of two groups — filterLFC","text":"","code":"filterLFC(dataList, filter_lfc, sampleClasses = dataList$sampleClasses)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterLFC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter dataset based on LFC of two groups — filterLFC","text":"dataList list object filter_lfc numeric e.g. 2 -2 sampleClasses vector names group1 group2","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterLFC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter dataset based on LFC of two groups — filterLFC","text":"boolean vector","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterThreshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter dataset based on intensity mean values — filterThreshold","title":"Filter dataset based on intensity mean values — filterThreshold","text":"Filter dataset based intensity mean values","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterThreshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter dataset based on intensity mean values — filterThreshold","text":"","code":"filterThreshold(   dataList,   filter_average,   sampleClasses = dataList$sampleClasses )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterThreshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter dataset based on intensity mean values — filterThreshold","text":"dataList list object filter_average numeric sampleClasses vector sample classes","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/filterThreshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter dataset based on intensity mean values — filterThreshold","text":"boolean vector","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/getAvailableClassifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Classifiers — getAvailableClassifiers","title":"Classifiers — getAvailableClassifiers","text":"Classifiers","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/getAvailableClassifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classifiers — getAvailableClassifiers","text":"","code":"getAvailableClassifiers(resultFolderForClassifiers)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/getAvailableClassifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classifiers — getAvailableClassifiers","text":"resultFolderForClassifiers","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/getAvailableClassifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classifiers — getAvailableClassifiers","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/getPrecursorColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Create annotation colors — getPrecursorColors","title":"Create annotation colors — getPrecursorColors","text":"Create annotation colors","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/getPrecursorColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create annotation colors — getPrecursorColors","text":"","code":"getPrecursorColors(dataList, precursorSet)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/getPrecursorColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create annotation colors — getPrecursorColors","text":"dataList list object precursorSet vector","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/getPrecursorColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create annotation colors — getPrecursorColors","text":"list colors annotations","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/importParameterSetInit.html","id":null,"dir":"Reference","previous_headings":"","what":"Default values — importParameterSetInit","title":"Default values — importParameterSetInit","text":"Default values","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/importParameterSetInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default values — importParameterSetInit","text":"","code":"importParameterSetInit()"},{"path":"http://ipb-halle.github.io/MetFamily/reference/importParameterSetInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default values — importParameterSetInit","text":"list parameterSet","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/makeFilterObj.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a filterObject for console use — makeFilterObj","title":"Create a filterObject for console use — makeFilterObj","text":"Mixes code filterData() doPerformFiltering_impl() provide simple way create compatible filterObj script.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/makeFilterObj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a filterObject for console use — makeFilterObj","text":"","code":"makeFilterObj(   dataList,   filter_average = NULL,   filter_lfc = NULL,   sampleClasses = NULL )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/makeFilterObj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a filterObject for console use — makeFilterObj","text":"dataList list object filter_average numeric filter_lfc numeric sampleClasses character vector","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/makeFilterObj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a filterObject for console use — makeFilterObj","text":"filterObject","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/makeFilterObj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a filterObject for console use — makeFilterObj","text":"doPerformFiltering_impl() relies DataList global environment, used script.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/metaboliteFamilyVersusClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — metaboliteFamilyVersusClass","title":"Title — metaboliteFamilyVersusClass","text":"Title","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/metaboliteFamilyVersusClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — metaboliteFamilyVersusClass","text":"","code":"metaboliteFamilyVersusClass(   dataList,   precursorSet,   classToSpectra_class,   properties_class,   classifierClass,   mappingSpectraToClassDf,   addClassifierConsensusSpectrum )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/metaboliteFamilyVersusClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — metaboliteFamilyVersusClass","text":"dataList  precursorSet  classToSpectra_class  properties_class  classifierClass  mappingSpectraToClassDf  addClassifierConsensusSpectrum","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/metaboliteFamilyVersusClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — metaboliteFamilyVersusClass","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/mzClustGeneric.html","id":null,"dir":"Reference","previous_headings":"","what":"Alignment of high resolution mass spectra — mzClustGeneric","title":"Alignment of high resolution mass spectra — mzClustGeneric","text":"adapted R package xcms: xcms_1.44.0, package path: R/mzClust.R Reference: Alignment high resolution mass spectra: development heuristic approach metabolomics Metabolomics June 2006, Volume 2, Issue 2, pp 75-83 http://link.springer.com/article/10.1007%2Fs11306-006-0021-7","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/mzClustGeneric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignment of high resolution mass spectra — mzClustGeneric","text":"","code":"mzClustGeneric(   p,   sampclass = NULL,   mzppm = 20,   mzabs = 0,   minsamp = 1,   minfrac = 0.5,   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/mzClustGeneric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignment of high resolution mass spectra — mzClustGeneric","text":"p  sampclass  mzppm  mzabs  minsamp  minfrac  progress","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/mzClustGeneric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alignment of high resolution mass spectra — mzClustGeneric","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parameterSetDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a parameterSet object — parameterSetDefault","title":"Create a parameterSet object — parameterSetDefault","text":"use script","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parameterSetDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a parameterSet object — parameterSetDefault","text":"","code":"parameterSetDefault()"},{"path":"http://ipb-halle.github.io/MetFamily/reference/parameterSetDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a parameterSet object — parameterSetDefault","text":"parameterSet list object default values used app","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parseMSP_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"parseMSP_attributes — parseMSP_attributes","title":"parseMSP_attributes — parseMSP_attributes","text":"parseMSP_attributes","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parseMSP_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parseMSP_attributes — parseMSP_attributes","text":"","code":"parseMSP_attributes(   fileSpectra,   progress = FALSE,   flexiblePeakList = FALSE,   multiplePeaksPerLine = FALSE,   includeIDasRecordSeparator = TRUE,   includeNAMEasRecordSeparator = TRUE,   includeTITLEasRecordSeparator = TRUE,   returnEmptySpectra = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/parseMSP_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parseMSP_attributes — parseMSP_attributes","text":"fileSpectra  progress  flexiblePeakList  multiplePeaksPerLine  includeIDasRecordSeparator  includeNAMEasRecordSeparator  includeTITLEasRecordSeparator  returnEmptySpectra","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parseMSP_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parseMSP_attributes — parseMSP_attributes","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parsePeakAbundanceMatrixQF.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — parsePeakAbundanceMatrixQF","title":"Title — parsePeakAbundanceMatrixQF","text":"Title","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parsePeakAbundanceMatrixQF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — parsePeakAbundanceMatrixQF","text":"","code":"parsePeakAbundanceMatrixQF(   qfeatures,   doPrecursorDeisotoping,   mzDeviationInPPM_precursorDeisotoping,   mzDeviationAbsolute_precursorDeisotoping,   maximumRtDifference,   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/parsePeakAbundanceMatrixQF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — parsePeakAbundanceMatrixQF","text":"qfeatures Object type QFeatures doPrecursorDeisotoping  mzDeviationInPPM_precursorDeisotoping  mzDeviationAbsolute_precursorDeisotoping  maximumRtDifference  progress boolean whether show progress bar","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/parsePeakAbundanceMatrixQF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — parsePeakAbundanceMatrixQF","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/performPca.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PCA — performPca","title":"Run PCA — performPca","text":"Run PCA","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/performPca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PCA — performPca","text":"","code":"performPca(dataList, dataFrame2, ms1AnalysisMethod)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/performPca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PCA — performPca","text":"dataList List object dataFrame2  ms1AnalysisMethod","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/performPca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PCA — performPca","text":"PCA list object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"http://ipb-halle.github.io/MetFamily/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/processMS1data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process MS-Dial-like MS1 data.frame — processMS1data","title":"Process MS-Dial-like MS1 data.frame — processMS1data","text":"Processing MS-Dial-like MS1 data.frame. Includes calculation MS1 data mean log-fold-change (LFC) data","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/processMS1data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process MS-Dial-like MS1 data.frame — processMS1data","text":"","code":"processMS1data(   sampleNamesToExclude,   numberOfMS1features,   precursorLabels,   sampleClasses,   metaboliteProfileColumnNames,   dataColumnIndecesFunctionFromGroupIndex,   dataColumnsNameFunctionFromGroupIndex,   dataColumnsNameFunctionFromGroupName,   dataColumnsNameFunctionFromGroupNames,   groupNameFunctionFromDataColumnName,   tagsSector,   metaboliteProfile,   progress = FALSE )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/processMS1data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process MS-Dial-like MS1 data.frame — processMS1data","text":"sampleNamesToExclude  numberOfMS1features  precursorLabels  sampleClasses  metaboliteProfileColumnNames  dataColumnIndecesFunctionFromGroupIndex  dataColumnsNameFunctionFromGroupIndex  dataColumnsNameFunctionFromGroupName  dataColumnsNameFunctionFromGroupNames  groupNameFunctionFromDataColumnName  tagsSector  metaboliteProfile  progress","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/processMS1data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process MS-Dial-like MS1 data.frame — processMS1data","text":"?","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/projectFromFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a project dataList — projectFromFiles","title":"Create a project dataList — projectFromFiles","text":"Wrapper clunky workflow","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/projectFromFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a project dataList — projectFromFiles","text":"","code":"projectFromFiles(   ms1_path,   ms2_path,   annot_path = NULL,   siriusFileColumnName = c(\"NPC class\"),   parameterSet = NULL )"},{"path":"http://ipb-halle.github.io/MetFamily/reference/projectFromFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a project dataList — projectFromFiles","text":"ms1_path file MS1 intensity .txt file ms2_path file MS2 .msp file annot_path file annotations (.csv .tsv) siriusFileColumnName One \"NPC class\", \"NPC superclass\", \"NPC pathway\", \"ClassyFire subclass\", \"ClassyFire class\", \"ClassyFire superclass\" parameterSet list parameters use","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/projectFromFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a project dataList — projectFromFiles","text":"dataList","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readClusterDataFromProjectFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MetFamily Project data saved by the export function — readClusterDataFromProjectFile","title":"Read MetFamily Project data saved by the export function — readClusterDataFromProjectFile","text":"Supports reading plain gzip'ed files","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readClusterDataFromProjectFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MetFamily Project data saved by the export function — readClusterDataFromProjectFile","text":"","code":"readClusterDataFromProjectFile(file, progress = FALSE)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/readClusterDataFromProjectFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MetFamily Project data saved by the export function — readClusterDataFromProjectFile","text":"file Path file read progress Whether update shiny Progress bar","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readClusterDataFromProjectFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MetFamily Project data saved by the export function — readClusterDataFromProjectFile","text":"big dataList.","code":""},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMSDial.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MS-DIAL Output File into a QFeatures Object — readMSDial","title":"Read MS-DIAL Output File into a QFeatures Object — readMSDial","text":"function reads output file MS-DIAL converts QFeatures object.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMSDial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MS-DIAL Output File into a QFeatures Object — readMSDial","text":"","code":"readMSDial(file, version)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMSDial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MS-DIAL Output File into a QFeatures Object — readMSDial","text":"file string path MS-DIAL output file. version character string specifying version MS-DIAL used generate file. parameter currently used.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMSDial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MS-DIAL Output File into a QFeatures Object — readMSDial","text":"QFeatures object containing: assay named \"exampleAssay\" metabolite counts. Row data (feature metadata) extracted input file. Column data (sample metadata) extracted input file.","code":""},{"path":[]},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMetaboscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","title":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","text":"function reads metabolite profile output file (.xlsx) Metaboscape converts QFeatures object.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMetaboscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","text":"","code":"readMetaboscape(file, version)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMetaboscape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","text":"file character string specifying path Metaboscape output file (Excel format). version character string specifying version Metaboscape used generate file. parameter currently used.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMetaboscape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","text":"QFeatures object containing: assay named \"exampleAssay\" metabolite counts. Row data (feature metadata) extracted input file. Column data (sample metadata) extracted sample names, including injection order sample name.","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMetaboscape.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","text":"#TODO: Bruker metaboscape site #TODO: Ordering ?","code":""},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/reference/readMetaboscape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Metaboscape Output File into a QFeatures Object — readMetaboscape","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have a Metaboscape output file named \"data.xlsx\": qf <- readMetaboscape(\"data.xlsx\") #TODO: System file    # Examine the structure of the resulting QFeatures object qf  # Access the assay data assay(qf[[\"exampleAssay\"]])  # Access the row data (feature metadata) rowData(qf[[\"exampleAssay\"]])  # Access the column data (sample metadata) colData(qf) } # }"},{"path":"http://ipb-halle.github.io/MetFamily/reference/readProjectData.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MetFamily Project data saved by the export function — readProjectData","title":"Read MetFamily Project data saved by the export function — readProjectData","text":"Read MetFamily Project data saved export function","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readProjectData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MetFamily Project data saved by the export function — readProjectData","text":"","code":"readProjectData(fileLines, progress = FALSE)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/readProjectData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MetFamily Project data saved by the export function — readProjectData","text":"fileLines Character vector content project file progress Whether update shiny Progress bar","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/readProjectData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MetFamily Project data saved by the export function — readProjectData","text":"big dataList.","code":""},{"path":[]},{"path":"http://ipb-halle.github.io/MetFamily/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. shinyBS bsTooltip","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/runMetFamily.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the web app in browser — runMetFamily","title":"Start the web app in browser — runMetFamily","text":"Run web app browser","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/runMetFamily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the web app in browser — runMetFamily","text":"","code":"runMetFamily(launch.browser = TRUE, ...)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/runMetFamily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start the web app in browser — runMetFamily","text":"launch.browser Launch web browser open MetFamily ... pass additional parameters runApp(), e.g. host=\"0.0.0.0\", port=3838","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/runMetFamily.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Start the web app in browser — runMetFamily","text":"Hendrik Treutler, Steffen Neumann","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/runMetFamily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the web app in browser — runMetFamily","text":"","code":"if (FALSE) { # \\dontrun{ runMetFamily() } # }"},{"path":"http://ipb-halle.github.io/MetFamily/reference/sparseMatrixToString.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten listObject to string for export — sparseMatrixToString","title":"Flatten listObject to string for export — sparseMatrixToString","text":"Also used running readProjectData","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/sparseMatrixToString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten listObject to string for export — sparseMatrixToString","text":"","code":"sparseMatrixToString(matrixRows, matrixCols, matrixVals, parameterSet)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/sparseMatrixToString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten listObject to string for export — sparseMatrixToString","text":"matrixRows  matrixCols  matrixVals  parameterSet","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/sparseMatrixToString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten listObject to string for export — sparseMatrixToString","text":"big string object","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/swap_names_and_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap a vector's names and values — swap_names_and_values","title":"Swap a vector's names and values — swap_names_and_values","text":"Similar searchable::invert()","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/swap_names_and_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap a vector's names and values — swap_names_and_values","text":"","code":"swap_names_and_values(x)"},{"path":"http://ipb-halle.github.io/MetFamily/reference/swap_names_and_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap a vector's names and values — swap_names_and_values","text":"x vector","code":""},{"path":"http://ipb-halle.github.io/MetFamily/reference/swap_names_and_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap a vector's names and values — swap_names_and_values","text":"string","code":""}]
